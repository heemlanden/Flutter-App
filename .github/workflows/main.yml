name: Flutter Xcode Fake-Sign Build

on: 
  push:
  pull_request:
  workflow_dispatch:
    inputs: 
      release__nightly:
        description: Create a nightly release
        type: boolean
        required: false

jobs:
  build:
    name: Build Flutter IPA (unsigned)
    runs-on: macos-latest
    env:
      scheme: Runner
      archive_path: build/ios/archive
    outputs:
      scheme: ${{ steps.set_scheme.outputs.scheme }}
      archive_path: ${{ env.archive_path }}

    steps:
      - uses: actions/checkout@v3

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.3'
          channel: stable

      - name: Get Flutter dependencies
        run: flutter pub get

      - name: Set Scheme
        id: set_scheme
        run: echo "scheme=$scheme" >> $GITHUB_OUTPUT

      - name: Build unsigned IPA
        run: flutter build ipa --no-codesign

      - name: List build output (debug)
        run: ls -R build/ios

      - name: Tar Build Artifact
        run: tar -cvf "archive.xcarchive.tar" "build/ios/archive/Runner.xcarchive"

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ios-archive-tar
          path: archive.xcarchive.tar

  package:
    name: Create fake-signed IPA
    runs-on: macos-latest
    needs: [build]
    permissions:
      contents: write
    env:
      scheme: ${{ needs.build.outputs.scheme }}
      archive_path: build/ios/archive
    outputs:
      artifact: ${{ env.scheme }}.ipa

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: ios-archive-tar

      - name: Extract Build Artifact
        run: |
          tar -xf "archive.xcarchive.tar"

      - name: Install ldid
        run: brew install ldid

      - name: Create IPA
        run: |
          ls
          APP_PATH="build/ios/archive/Runner.xcarchive/Products/Applications/Runner.app"
          mkdir -p Payload
          cp -r "$APP_PATH" Payload/
          zip -r "Runner.ipa" Payload -x "._*" -x ".DS_Store" -x "__MACOSX"


      - name: Upload IPA Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.scheme }}.ipa
          path: ${{ env.scheme }}.ipa
  
  release__nightly:
    name: Nightly Release
    permissions:
      contents: write
    if: inputs.release__nightly || github.event_name == 'push'
    runs-on: ubuntu-latest
    needs: [package]
    concurrency:
      group: release__nightly
      cancel-in-progress: true

    steps:
      - name: Download a Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ needs.package.outputs.artifact }}
      - name: Nightly Release
        uses: andelf/nightly-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with: 
          body: |
            This is a nightly release [created automatically with GitHub Actions workflow](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}/attempts/${{ github.run_attempt }}).
          files: |
            ${{ needs.package.outputs.artifact }}
